{"ast":null,"code":"var _jsxFileName = \"/home/user5/Desktop/Imbus_Intern/client/src/pages/client/tableDetail/TableGraph.js\",\n  _s = $RefreshSig$();\n// TableGraph.js\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableGraph({\n  graph,\n  tableName,\n  show,\n  setShow,\n  RelationsPk,\n  RelationsFk\n}) {\n  _s();\n  const fgRef = useRef();\n  const navigate = useNavigate();\n  const [tooltip, setTooltip] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    text: \"\"\n  });\n\n  // Define linkColor function locally\n  const linkColor = link => {\n    const tgt = typeof link.target === \"object\" ? link.target.id : link.target;\n    return tgt === tableName ? \"#16a34a\" : \"#f59e0b\"; // green incoming, orange outgoing\n  };\n\n  // Track mouse position for tooltip placement\n  useEffect(() => {\n    const handleMove = e => {\n      setTooltip(prev => ({\n        ...prev,\n        x: e.clientX,\n        y: e.clientY\n      }));\n    };\n    window.addEventListener(\"mousemove\", handleMove);\n    return () => window.removeEventListener(\"mousemove\", handleMove);\n  }, []);\n\n  // Filter: only main table + directly connected nodes, links only to/from main table\n  const filtered = useMemo(() => {\n    if (!(graph !== null && graph !== void 0 && graph.nodes) || !(graph !== null && graph !== void 0 && graph.links)) return {\n      nodes: [],\n      links: []\n    };\n    const main = graph.nodes.find(n => n.name === tableName);\n    if (!main) return {\n      nodes: [],\n      links: []\n    };\n    const neighbors = new Set([main.id]);\n    const preliminaryLinks = graph.links.filter(l => {\n      const srcId = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgtId = typeof l.target === \"object\" ? l.target.id : l.target;\n      if (srcId === main.id || tgtId === main.id) {\n        neighbors.add(srcId);\n        neighbors.add(tgtId);\n        return true;\n      }\n      return false;\n    });\n    const links = preliminaryLinks.map(l => {\n      const srcId = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgtId = typeof l.target === \"object\" ? l.target.id : l.target;\n      const srcNode = graph.nodes.find(n => n.id === srcId);\n      const tgtNode = graph.nodes.find(n => n.id === tgtId);\n\n      // Determine if the link is incoming (tgt is main) or outgoing (src is main)\n      const isIncoming = tgtId === main.id;\n      const pkTable = isIncoming ? srcNode : tgtNode;\n      const fkTable = isIncoming ? tgtNode : srcNode;\n\n      // Extract fkColumn and pkColumn from the link data\n      const fkColumn = l.fkColumn || \"(none)\";\n      const pkColumn = l.pkColumn || \"(none)\";\n      return {\n        ...l,\n        source: srcNode,\n        target: tgtNode,\n        srcName: srcNode === null || srcNode === void 0 ? void 0 : srcNode.name,\n        tgtName: tgtNode === null || tgtNode === void 0 ? void 0 : tgtNode.name,\n        pkColumns: (pkTable === null || pkTable === void 0 ? void 0 : pkTable.pkColumns) || [],\n        fkColumns: (fkTable === null || fkTable === void 0 ? void 0 : fkTable.fkColumns) || [],\n        pkColumn,\n        fkColumn,\n        relation: (RelationsPk === null || RelationsPk === void 0 ? void 0 : RelationsPk[`${pkTable === null || pkTable === void 0 ? void 0 : pkTable.name}->${fkTable === null || fkTable === void 0 ? void 0 : fkTable.name}`]) || (RelationsPk === null || RelationsPk === void 0 ? void 0 : RelationsPk[`${fkTable === null || fkTable === void 0 ? void 0 : fkTable.name}->${pkTable === null || pkTable === void 0 ? void 0 : pkTable.name}`]) || (RelationsFk === null || RelationsFk === void 0 ? void 0 : RelationsFk[`${pkTable === null || pkTable === void 0 ? void 0 : pkTable.name}->${fkTable === null || fkTable === void 0 ? void 0 : fkTable.name}`]) || (RelationsFk === null || RelationsFk === void 0 ? void 0 : RelationsFk[`${fkTable === null || fkTable === void 0 ? void 0 : fkTable.name}->${pkTable === null || pkTable === void 0 ? void 0 : pkTable.name}`]) || null\n      };\n    });\n    const nodes = graph.nodes.filter(n => neighbors.has(n.id)).map(node => {\n      const nodeFkColumns = preliminaryLinks.filter(l => {\n        var _graph$nodes$find;\n        const srcName = typeof l.source === \"object\" ? l.source.name : (_graph$nodes$find = graph.nodes.find(n => n.id === l.source)) === null || _graph$nodes$find === void 0 ? void 0 : _graph$nodes$find.name;\n        return srcName === node.name && l.fkColumn;\n      }).map(l => l.fkColumn).filter(Boolean);\n      return {\n        ...node,\n        fkColumns: nodeFkColumns.length > 0 ? nodeFkColumns : node.fkColumns || [],\n        // Initialize main node at center (0, 0)\n        x: node.name === tableName ? 0 : node.x,\n        y: node.name === tableName ? 0 : node.y\n      };\n    });\n    console.log(\"Filtered links:\", links);\n    console.log(\"Filtered nodes:\", nodes);\n    return {\n      nodes,\n      links\n    };\n  }, [graph, tableName, RelationsPk, RelationsFk]);\n\n  // Setup forces for spacing and centering\n  useEffect(() => {\n    if (fgRef.current) {\n      const fg = fgRef.current;\n      fg.d3Force(\"charge\").strength(-400); // Push nodes apart\n      fg.d3Force(\"link\").distance(200); // Spread links further\n      fg.d3Force(\"center\").strength(0.1); // Center the graph around (0, 0)\n      fg.d3Force(\"x\", fg.d3Force(\"x\").strength(0.05)); // Gentle pull towards x=0\n      fg.d3Force(\"y\", fg.d3Force(\"y\").strength(0.05)); // Gentle pull towards y=0\n      fg.zoomToFit(400, 100); // Initial zoom to fit\n    }\n  }, [filtered]);\n\n  // Zoom controls\n  const handleZoomIn = () => {\n    if (fgRef.current) {\n      const zoom = fgRef.current.zoom();\n      fgRef.current.zoom(zoom * 1.2, 400);\n    }\n  };\n  const handleZoomOut = () => {\n    if (fgRef.current) {\n      const zoom = fgRef.current.zoom();\n      fgRef.current.zoom(zoom / 1.2, 400);\n    }\n  };\n  const handleZoomToFit = () => {\n    if (fgRef.current) {\n      fgRef.current.zoomToFit(400, 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full bg-white rounded-lg shadow relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center mx-auto mb-5 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"px-6 text-xl italic\",\n        children: \"Graph view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ShowGraph\",\n        className: \"relative w-16 h-8 cursor-pointer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"ShowGraph\",\n          className: \"sr-only peer\",\n          onChange: () => setShow(prev => !prev),\n          checked: show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute inset-0 bg-orange-400 rounded-full transition peer-checked:bg-[#3e9688]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute inset-0 w-6 h-6 m-1 bg-white rounded-full transition peer-checked:translate-x-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-3 right-3 flex flex-col gap-2 z-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomIn,\n          className: \"px-2 py-1 bg-gray-700 text-white rounded shadow\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomOut,\n          className: \"px-2 py-1 bg-gray-700 text-white rounded shadow\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomToFit,\n          className: \"px-2 py-1 bg-gray-700 text-white rounded shadow text-xs\",\n          children: \"Fit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), tooltip.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-white text-gray-800 text-xs px-3 py-2 rounded-lg shadow-lg border border-[#3e9688] pointer-events-none z-50\",\n        style: {\n          left: tooltip.x + 12,\n          top: tooltip.y + 12\n        },\n        children: tooltip.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n        ref: fgRef,\n        graphData: filtered,\n        nodeId: \"id\",\n        nodeLabel: n => {\n          var _n$pkColumns;\n          return `${n.name}\\nPKs: ${((_n$pkColumns = n.pkColumns) === null || _n$pkColumns === void 0 ? void 0 : _n$pkColumns.join(\", \")) || \"(none)\"}`;\n        },\n        linkDirectionalArrowLength: 6,\n        linkDirectionalArrowRelPos: 1,\n        linkCurvature: 0.25,\n        nodeAutoColorBy: \"group\",\n        onNodeClick: node => navigate(`/table/${node.name}`),\n        enableZoomPanInteraction: false // disable scroll zoom\n        ,\n        onLinkHover: link => {\n          if (link) {\n            const srcName = link.source.name || link.srcName;\n            const tgtName = link.target.name || link.tgtName;\n            const pkColumn = link.pkColumn || \"(none)\";\n            const fkColumn = link.fkColumn || \"(none)\";\n            setTooltip({\n              visible: true,\n              text: `${tgtName} ${pkColumn} ----> ${srcName} ForeignKey: ${fkColumn}`,\n              x: tooltip.x,\n              y: tooltip.y\n            });\n          } else {\n            setTooltip(prev => ({\n              ...prev,\n              visible: false\n            }));\n          }\n        },\n        linkColor: linkColor // Use the locally defined linkColor function\n        ,\n        linkWidth: 2,\n        nodeCanvasObject: (node, ctx, globalScale) => {\n          const label = node.name;\n          const fontSize = 14 / Math.max(0.5, globalScale);\n          ctx.beginPath();\n          ctx.arc(node.x, node.y, node.name === tableName ? 12 : 8, 0, 2 * Math.PI, false);\n          ctx.fillStyle = node.name === tableName ? \"#f97316\" : node.color || \"#ccc\";\n          ctx.fill();\n          ctx.strokeStyle = \"#333\";\n          ctx.lineWidth = 2;\n          ctx.stroke();\n          ctx.font = `${fontSize}px Sans-Serif`;\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"top\";\n          ctx.fillStyle = \"#111\";\n          ctx.fillText(label, node.x, node.y + 14);\n        }\n        // Custom link drawing to connect to node edges\n        ,\n        linkCanvasObject: (link, ctx, globalScale) => {\n          const src = link.source;\n          const tgt = link.target;\n          const srcRadius = src.name === tableName ? 12 : 8;\n          const tgtRadius = tgt.name === tableName ? 12 : 8;\n\n          // Calculate angle from source to target\n          const dx = tgt.x - src.x;\n          const dy = tgt.y - src.y;\n          const angle = Math.atan2(dy, dx);\n\n          // Calculate edge points\n          const srcX = src.x + srcRadius * Math.cos(angle);\n          const srcY = src.y + srcRadius * Math.sin(angle);\n          const tgtX = tgt.x - tgtRadius * Math.cos(angle);\n          const tgtY = tgt.y - tgtRadius * Math.sin(angle);\n          ctx.beginPath();\n          ctx.moveTo(srcX, srcY);\n          ctx.lineTo(tgtX, tgtY);\n          ctx.strokeStyle = linkColor(link); // Use the linkColor function\n          ctx.lineWidth = 2;\n          ctx.stroke();\n\n          // Draw arrowhead\n          const arrowLength = 6;\n          const arrowAngle = Math.PI / 6;\n          ctx.beginPath();\n          ctx.moveTo(tgtX, tgtY);\n          ctx.lineTo(tgtX - arrowLength * Math.cos(angle - arrowAngle), tgtY - arrowLength * Math.sin(angle - arrowAngle));\n          ctx.lineTo(tgtX - arrowLength * Math.cos(angle + arrowAngle), tgtY - arrowLength * Math.sin(angle + arrowAngle));\n          ctx.closePath();\n          ctx.fillStyle = linkColor(link); // Use the linkColor function\n          ctx.fill();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(TableGraph, \"uLIoZXE3ytwExSlPQUUbnFkIaHU=\", false, function () {\n  return [useNavigate];\n});\n_c = TableGraph;\nvar _c;\n$RefreshReg$(_c, \"TableGraph\");","map":{"version":3,"names":["useEffect","useMemo","useRef","useState","ForceGraph2D","useNavigate","jsxDEV","_jsxDEV","TableGraph","graph","tableName","show","setShow","RelationsPk","RelationsFk","_s","fgRef","navigate","tooltip","setTooltip","visible","x","y","text","linkColor","link","tgt","target","id","handleMove","e","prev","clientX","clientY","window","addEventListener","removeEventListener","filtered","nodes","links","main","find","n","name","neighbors","Set","preliminaryLinks","filter","l","srcId","source","tgtId","add","map","srcNode","tgtNode","isIncoming","pkTable","fkTable","fkColumn","pkColumn","srcName","tgtName","pkColumns","fkColumns","relation","has","node","nodeFkColumns","_graph$nodes$find","Boolean","length","console","log","current","fg","d3Force","strength","distance","zoomToFit","handleZoomIn","zoom","handleZoomOut","handleZoomToFit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","checked","onClick","style","left","top","ref","graphData","nodeId","nodeLabel","_n$pkColumns","join","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkCurvature","nodeAutoColorBy","onNodeClick","enableZoomPanInteraction","onLinkHover","linkWidth","nodeCanvasObject","ctx","globalScale","label","fontSize","Math","max","beginPath","arc","PI","fillStyle","color","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","linkCanvasObject","src","srcRadius","tgtRadius","dx","dy","angle","atan2","srcX","cos","srcY","sin","tgtX","tgtY","moveTo","lineTo","arrowLength","arrowAngle","closePath","_c","$RefreshReg$"],"sources":["/home/user5/Desktop/Imbus_Intern/client/src/pages/client/tableDetail/TableGraph.js"],"sourcesContent":["// TableGraph.js\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function TableGraph({ graph, tableName, show, setShow, RelationsPk, RelationsFk }) {\n  const fgRef = useRef();\n  const navigate = useNavigate();\n  const [tooltip, setTooltip] = useState({ visible: false, x: 0, y: 0, text: \"\" });\n\n  // Define linkColor function locally\n  const linkColor = (link) => {\n    const tgt = typeof link.target === \"object\" ? link.target.id : link.target;\n    return tgt === tableName ? \"#16a34a\" : \"#f59e0b\"; // green incoming, orange outgoing\n  };\n\n  // Track mouse position for tooltip placement\n  useEffect(() => {\n    const handleMove = (e) => {\n      setTooltip((prev) => ({ ...prev, x: e.clientX, y: e.clientY }));\n    };\n    window.addEventListener(\"mousemove\", handleMove);\n    return () => window.removeEventListener(\"mousemove\", handleMove);\n  }, []);\n\n  // Filter: only main table + directly connected nodes, links only to/from main table\n  const filtered = useMemo(() => {\n    if (!graph?.nodes || !graph?.links) return { nodes: [], links: [] };\n\n    const main = graph.nodes.find((n) => n.name === tableName);\n    if (!main) return { nodes: [], links: [] };\n\n    const neighbors = new Set([main.id]);\n    const preliminaryLinks = graph.links\n      .filter((l) => {\n        const srcId = typeof l.source === \"object\" ? l.source.id : l.source;\n        const tgtId = typeof l.target === \"object\" ? l.target.id : l.target;\n        if (srcId === main.id || tgtId === main.id) {\n          neighbors.add(srcId);\n          neighbors.add(tgtId);\n          return true;\n        }\n        return false;\n      });\n\n    const links = preliminaryLinks.map((l) => {\n      const srcId = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgtId = typeof l.target === \"object\" ? l.target.id : l.target;\n      const srcNode = graph.nodes.find((n) => n.id === srcId);\n      const tgtNode = graph.nodes.find((n) => n.id === tgtId);\n\n      // Determine if the link is incoming (tgt is main) or outgoing (src is main)\n      const isIncoming = tgtId === main.id;\n      const pkTable = isIncoming ? srcNode : tgtNode;\n      const fkTable = isIncoming ? tgtNode : srcNode;\n\n      // Extract fkColumn and pkColumn from the link data\n      const fkColumn = l.fkColumn || \"(none)\";\n      const pkColumn = l.pkColumn || \"(none)\";\n\n      return {\n        ...l,\n        source: srcNode,\n        target: tgtNode,\n        srcName: srcNode?.name,\n        tgtName: tgtNode?.name,\n        pkColumns: pkTable?.pkColumns || [],\n        fkColumns: fkTable?.fkColumns || [],\n        pkColumn,\n        fkColumn,\n        relation: RelationsPk?.[`${pkTable?.name}->${fkTable?.name}`]\n          || RelationsPk?.[`${fkTable?.name}->${pkTable?.name}`]\n          || RelationsFk?.[`${pkTable?.name}->${fkTable?.name}`]\n          || RelationsFk?.[`${fkTable?.name}->${pkTable?.name}`]\n          || null,\n      };\n    });\n\n    const nodes = graph.nodes.filter((n) => neighbors.has(n.id)).map((node) => {\n      const nodeFkColumns = preliminaryLinks\n        .filter((l) => {\n          const srcName = typeof l.source === \"object\" ? l.source.name : graph.nodes.find(n => n.id === l.source)?.name;\n          return srcName === node.name && l.fkColumn;\n        })\n        .map((l) => l.fkColumn)\n        .filter(Boolean);\n\n      return {\n        ...node,\n        fkColumns: nodeFkColumns.length > 0 ? nodeFkColumns : node.fkColumns || [],\n        // Initialize main node at center (0, 0)\n        x: node.name === tableName ? 0 : node.x,\n        y: node.name === tableName ? 0 : node.y,\n      };\n    });\n\n    console.log(\"Filtered links:\", links);\n    console.log(\"Filtered nodes:\", nodes);\n    return { nodes, links };\n  }, [graph, tableName, RelationsPk, RelationsFk]);\n\n  // Setup forces for spacing and centering\n  useEffect(() => {\n    if (fgRef.current) {\n      const fg = fgRef.current;\n      fg.d3Force(\"charge\").strength(-400); // Push nodes apart\n      fg.d3Force(\"link\").distance(200); // Spread links further\n      fg.d3Force(\"center\").strength(0.1); // Center the graph around (0, 0)\n      fg.d3Force(\"x\", fg.d3Force(\"x\").strength(0.05)); // Gentle pull towards x=0\n      fg.d3Force(\"y\", fg.d3Force(\"y\").strength(0.05)); // Gentle pull towards y=0\n      fg.zoomToFit(400, 100); // Initial zoom to fit\n    }\n  }, [filtered]);\n\n  // Zoom controls\n  const handleZoomIn = () => {\n    if (fgRef.current) {\n      const zoom = fgRef.current.zoom();\n      fgRef.current.zoom(zoom * 1.2, 400);\n    }\n  };\n  const handleZoomOut = () => {\n    if (fgRef.current) {\n      const zoom = fgRef.current.zoom();\n      fgRef.current.zoom(zoom / 1.2, 400);\n    }\n  };\n  const handleZoomToFit = () => {\n    if (fgRef.current) {\n      fgRef.current.zoomToFit(400, 100);\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full bg-white rounded-lg shadow relative\">\n      <div className=\"flex justify-center items-center mx-auto mb-5 \">\n        <h3 className=\"px-6 text-xl italic\">Graph view</h3>\n        <label htmlFor=\"ShowGraph\" className=\"relative w-16 h-8 cursor-pointer\">\n          <input\n            type=\"checkbox\"\n            id=\"ShowGraph\"\n            className=\"sr-only peer\"\n            onChange={() => setShow((prev) => !prev)}\n            checked={show}\n          />\n          <span className=\"absolute inset-0 bg-orange-400 rounded-full transition peer-checked:bg-[#3e9688]\" />\n          <span className=\"absolute inset-0 w-6 h-6 m-1 bg-white rounded-full transition peer-checked:translate-x-8\" />\n        </label>\n      </div>\n\n      {show && (\n        <div className=\"relative w-full h-full\">\n          {/* Zoom controls */}\n          <div className=\"absolute top-3 right-3 flex flex-col gap-2 z-10\">\n            <button\n              onClick={handleZoomIn}\n              className=\"px-2 py-1 bg-gray-700 text-white rounded shadow\"\n            >\n              +\n            </button>\n            <button\n              onClick={handleZoomOut}\n              className=\"px-2 py-1 bg-gray-700 text-white rounded shadow\"\n            >\n              -\n            </button>\n            <button\n              onClick={handleZoomToFit}\n              className=\"px-2 py-1 bg-gray-700 text-white rounded shadow text-xs\"\n            >\n              Fit\n            </button>\n          </div>\n\n          {/* Floating tooltip */}\n          {tooltip.visible && (\n            <div\n              className=\"absolute bg-white text-gray-800 text-xs px-3 py-2 rounded-lg shadow-lg border border-[#3e9688] pointer-events-none z-50\"\n              style={{ left: tooltip.x + 12, top: tooltip.y + 12 }}\n            >\n              {tooltip.text}\n            </div>\n          )}\n\n          <ForceGraph2D\n            ref={fgRef}\n            graphData={filtered}\n            nodeId=\"id\"\n            nodeLabel={(n) =>\n              `${n.name}\\nPKs: ${n.pkColumns?.join(\", \") || \"(none)\"}`\n            }\n            linkDirectionalArrowLength={6}\n            linkDirectionalArrowRelPos={1}\n            linkCurvature={0.25}\n            nodeAutoColorBy=\"group\"\n            onNodeClick={(node) => navigate(`/table/${node.name}`)}\n            enableZoomPanInteraction={false} // disable scroll zoom\n            onLinkHover={(link) => {\n              if (link) {\n                const srcName = link.source.name || link.srcName;\n                const tgtName = link.target.name || link.tgtName;\n                const pkColumn = link.pkColumn || \"(none)\";\n                const fkColumn = link.fkColumn || \"(none)\";\n\n                setTooltip({\n                  visible: true,\n                  text: `${tgtName} ${pkColumn} ----> ${srcName} ForeignKey: ${fkColumn}`,\n                  x: tooltip.x,\n                  y: tooltip.y,\n                });\n              } else {\n                setTooltip((prev) => ({ ...prev, visible: false }));\n              }\n            }}\n            linkColor={linkColor} // Use the locally defined linkColor function\n            linkWidth={2}\n            nodeCanvasObject={(node, ctx, globalScale) => {\n              const label = node.name;\n              const fontSize = 14 / Math.max(0.5, globalScale);\n\n              ctx.beginPath();\n              ctx.arc(\n                node.x,\n                node.y,\n                node.name === tableName ? 12 : 8,\n                0,\n                2 * Math.PI,\n                false\n              );\n              ctx.fillStyle =\n                node.name === tableName ? \"#f97316\" : node.color || \"#ccc\";\n              ctx.fill();\n              ctx.strokeStyle = \"#333\";\n              ctx.lineWidth = 2;\n              ctx.stroke();\n\n              ctx.font = `${fontSize}px Sans-Serif`;\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"top\";\n              ctx.fillStyle = \"#111\";\n              ctx.fillText(label, node.x, node.y + 14);\n            }}\n            // Custom link drawing to connect to node edges\n            linkCanvasObject={(link, ctx, globalScale) => {\n              const src = link.source;\n              const tgt = link.target;\n              const srcRadius = src.name === tableName ? 12 : 8;\n              const tgtRadius = tgt.name === tableName ? 12 : 8;\n\n              // Calculate angle from source to target\n              const dx = tgt.x - src.x;\n              const dy = tgt.y - src.y;\n              const angle = Math.atan2(dy, dx);\n\n              // Calculate edge points\n              const srcX = src.x + srcRadius * Math.cos(angle);\n              const srcY = src.y + srcRadius * Math.sin(angle);\n              const tgtX = tgt.x - tgtRadius * Math.cos(angle);\n              const tgtY = tgt.y - tgtRadius * Math.sin(angle);\n\n              ctx.beginPath();\n              ctx.moveTo(srcX, srcY);\n              ctx.lineTo(tgtX, tgtY);\n              ctx.strokeStyle = linkColor(link); // Use the linkColor function\n              ctx.lineWidth = 2;\n              ctx.stroke();\n\n              // Draw arrowhead\n              const arrowLength = 6;\n              const arrowAngle = Math.PI / 6;\n              ctx.beginPath();\n              ctx.moveTo(tgtX, tgtY);\n              ctx.lineTo(\n                tgtX - arrowLength * Math.cos(angle - arrowAngle),\n                tgtY - arrowLength * Math.sin(angle - arrowAngle)\n              );\n              ctx.lineTo(\n                tgtX - arrowLength * Math.cos(angle + arrowAngle),\n                tgtY - arrowLength * Math.sin(angle + arrowAngle)\n              );\n              ctx.closePath();\n              ctx.fillStyle = linkColor(link); // Use the linkColor function\n              ctx.fill();\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}