{"ast":null,"code":"var _jsxFileName = \"/home/user5/Desktop/Imbus_Intern/client/src/utils/PrivateRoutes.js\";\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = token => {\n  function hasJWT() {\n    let flag = false;\n\n    //check user has JWT token\n    localStorage.getItem(\"token\") ? flag = true : flag = false;\n    return flag;\n  }\n  return hasJWT() ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 34\n  }, this);\n};\n_c = PrivateRoutes;\nexport default PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["Outlet","Navigate","jsxDEV","_jsxDEV","PrivateRoutes","token","hasJWT","flag","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/user5/Desktop/Imbus_Intern/client/src/utils/PrivateRoutes.js"],"sourcesContent":["import { Outlet, Navigate } from \"react-router-dom\";\n\nconst PrivateRoutes = (token) => {\n  function hasJWT() {\n    let flag = false;\n\n    //check user has JWT token\n    localStorage.getItem(\"token\") ? (flag = true) : (flag = false);\n\n    return flag;\n  }\n  return hasJWT() ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoutes;\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,SAASC,MAAMA,CAAA,EAAG;IAChB,IAAIC,IAAI,GAAG,KAAK;;IAEhB;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAIF,IAAI,GAAG,IAAI,GAAKA,IAAI,GAAG,KAAM;IAE9D,OAAOA,IAAI;EACb;EACA,OAAOD,MAAM,CAAC,CAAC,gBAAGH,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGV,OAAA,CAACF,QAAQ;IAACa,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACE,EAAA,GAVIX,aAAa;AAYnB,eAAeA,aAAa;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}