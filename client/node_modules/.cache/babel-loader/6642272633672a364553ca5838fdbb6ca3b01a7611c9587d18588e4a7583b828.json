{"ast":null,"code":"var _jsxFileName = \"/home/user5/Desktop/Imbus_Intern/client/src/pages/admin/tables.js\",\n  _s = $RefreshSig$();\n// src/pages/admin/Tables.js\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tables() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch all tables from a single API\n    fetch(\"http://localhost:5500/tables\").then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch tables\");\n      return res.json();\n    }).then(data => {\n      setTables(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n\n  // Filter tables by search term\n  const filteredTables = tables.filter(t => t.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tables...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search tables...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        marginBottom: \"1rem\",\n        padding: \"0.5rem\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), filteredTables.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tables found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      cellSpacing: \"0\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Foreign Keys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTables.map(table => {\n          var _table$rowCount, _table$numForeignKey;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: table.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: table.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_table$rowCount = table.rowCount) !== null && _table$rowCount !== void 0 ? _table$rowCount : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_table$numForeignKey = table.numForeignKey) !== null && _table$numForeignKey !== void 0 ? _table$numForeignKey : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, table.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Tables, \"VhJIDyawLzTRQBT1FhnfGSTFXj0=\");\n_c = Tables;\nvar _c;\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Tables","_s","tables","setTables","searchTerm","setSearchTerm","loading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","catch","err","console","message","filteredTables","filter","t","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","type","placeholder","value","onChange","e","target","marginBottom","width","length","border","cellPadding","cellSpacing","map","table","_table$rowCount","_table$numForeignKey","id","rowCount","numForeignKey","_c","$RefreshReg$"],"sources":["/home/user5/Desktop/Imbus_Intern/client/src/pages/admin/tables.js"],"sourcesContent":["\n // src/pages/admin/Tables.js\nimport { useEffect, useState } from \"react\";\n\nexport default function Tables() {\n  const [tables, setTables] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch all tables from a single API\n    fetch(\"http://localhost:5500/tables\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to fetch tables\");\n        return res.json();\n      })\n      .then((data) => {\n        setTables(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  // Filter tables by search term\n  const filteredTables = tables.filter((t) =>\n    t.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  if (loading) return <p>Loading tables...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h2>Tables</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search tables...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        style={{ marginBottom: \"1rem\", padding: \"0.5rem\", width: \"100%\" }}\n      />\n\n      {filteredTables.length === 0 ? (\n        <p>No tables found</p>\n      ) : (\n        <table border=\"1\" cellPadding=\"8\" cellSpacing=\"0\" style={{ width: \"100%\" }}>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Rows</th>\n              <th>Foreign Keys</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredTables.map((table) => (\n              <tr key={table.id}>\n                <td>{table.id}</td>\n                <td>{table.name}</td>\n                <td>{table.rowCount ?? 0}</td>\n                <td>{table.numForeignKey ?? 0}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}