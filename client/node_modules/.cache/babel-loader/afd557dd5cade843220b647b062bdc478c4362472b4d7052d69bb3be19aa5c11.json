{"ast":null,"code":"var _jsxFileName = \"/home/user5/Desktop/Imbus_Intern/client/src/pages/client/tableDetail/graphDetail.js\",\n  _s = $RefreshSig$();\n// TableDetailGraph.js\nimport { useMemo, useRef, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableDetailGraph({\n  graph,\n  tableName\n}) {\n  _s();\n  const fgRef = useRef();\n  const [showGraph, setShowGraph] = useState(true);\n\n  // Filter graph: keep only the selected table and its neighbors\n  const filteredGraph = useMemo(() => {\n    if (!(graph !== null && graph !== void 0 && graph.nodes) || !(graph !== null && graph !== void 0 && graph.links)) return {\n      nodes: [],\n      links: []\n    };\n\n    // Find links where selected table is involved\n    const links = graph.links.filter(l => {\n      const src = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgt = typeof l.target === \"object\" ? l.target.id : l.target;\n      return src === tableName || tgt === tableName;\n    });\n\n    // Collect all involved nodes (selected + neighbors)\n    const involvedIds = new Set([tableName]);\n    links.forEach(l => {\n      const src = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgt = typeof l.target === \"object\" ? l.target.id : l.target;\n      involvedIds.add(src);\n      involvedIds.add(tgt);\n    });\n    const nodes = graph.nodes.filter(n => involvedIds.has(n.id));\n    return {\n      nodes,\n      links\n    };\n  }, [graph, tableName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGraph(!showGraph),\n      className: \"mb-4 px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700\",\n      children: showGraph ? \"Hide Graph\" : \"Show Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), showGraph && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-[600px] border rounded-xl shadow bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n        ref: fgRef,\n        graphData: filteredGraph,\n        nodeAutoColorBy: \"id\",\n        linkDirectionalArrowLength: 6,\n        linkDirectionalArrowRelPos: 1,\n        linkCurvature: 0.25,\n        nodeCanvasObject: (node, ctx, globalScale) => {\n          const label = node.id;\n          const fontSize = 14 / globalScale;\n\n          // Highlight the selected table\n          ctx.beginPath();\n          ctx.arc(node.x, node.y, node.id === tableName ? 14 : 8, 0, 2 * Math.PI, false);\n          ctx.fillStyle = node.id === tableName ? \"#2563eb\" : node.color || \"#999\";\n          ctx.fill();\n\n          // Text label (clearer, offset to avoid overlap)\n          ctx.font = `${fontSize}px Sans-Serif`;\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"top\";\n          ctx.fillStyle = node.id === tableName ? \"#111\" : \"#444\";\n          ctx.fillText(label, node.x, node.y + 10);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TableDetailGraph, \"d+02JJdZ3Ckr3I1AA5N2m9H1yfo=\");\n_c = TableDetailGraph;\nvar _c;\n$RefreshReg$(_c, \"TableDetailGraph\");","map":{"version":3,"names":["useMemo","useRef","useState","ForceGraph2D","jsxDEV","_jsxDEV","TableDetailGraph","graph","tableName","_s","fgRef","showGraph","setShowGraph","filteredGraph","nodes","links","filter","l","src","source","id","tgt","target","involvedIds","Set","forEach","add","n","has","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","graphData","nodeAutoColorBy","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkCurvature","nodeCanvasObject","node","ctx","globalScale","label","fontSize","beginPath","arc","x","y","Math","PI","fillStyle","color","fill","font","textAlign","textBaseline","fillText","_c","$RefreshReg$"],"sources":["/home/user5/Desktop/Imbus_Intern/client/src/pages/client/tableDetail/graphDetail.js"],"sourcesContent":["// TableDetailGraph.js\nimport { useMemo, useRef, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\n\nexport default function TableDetailGraph({ graph, tableName }) {\n  const fgRef = useRef();\n  const [showGraph, setShowGraph] = useState(true);\n\n  // Filter graph: keep only the selected table and its neighbors\n  const filteredGraph = useMemo(() => {\n    if (!graph?.nodes || !graph?.links) return { nodes: [], links: [] };\n\n    // Find links where selected table is involved\n    const links = graph.links.filter((l) => {\n      const src = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgt = typeof l.target === \"object\" ? l.target.id : l.target;\n      return src === tableName || tgt === tableName;\n    });\n\n    // Collect all involved nodes (selected + neighbors)\n    const involvedIds = new Set([tableName]);\n    links.forEach((l) => {\n      const src = typeof l.source === \"object\" ? l.source.id : l.source;\n      const tgt = typeof l.target === \"object\" ? l.target.id : l.target;\n      involvedIds.add(src);\n      involvedIds.add(tgt);\n    });\n\n    const nodes = graph.nodes.filter((n) => involvedIds.has(n.id));\n\n    return { nodes, links };\n  }, [graph, tableName]);\n\n  return (\n    <div className=\"p-4\">\n      {/* Toggle Button */}\n      <button\n        onClick={() => setShowGraph(!showGraph)}\n        className=\"mb-4 px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700\"\n      >\n        {showGraph ? \"Hide Graph\" : \"Show Graph\"}\n      </button>\n\n      {showGraph && (\n        <div className=\"w-full h-[600px] border rounded-xl shadow bg-gray-50\">\n          <ForceGraph2D\n            ref={fgRef}\n            graphData={filteredGraph}\n            nodeAutoColorBy=\"id\"\n            linkDirectionalArrowLength={6}\n            linkDirectionalArrowRelPos={1}\n            linkCurvature={0.25}\n            nodeCanvasObject={(node, ctx, globalScale) => {\n              const label = node.id;\n              const fontSize = 14 / globalScale;\n\n              // Highlight the selected table\n              ctx.beginPath();\n              ctx.arc(node.x, node.y, node.id === tableName ? 14 : 8, 0, 2 * Math.PI, false);\n              ctx.fillStyle = node.id === tableName ? \"#2563eb\" : node.color || \"#999\";\n              ctx.fill();\n\n              // Text label (clearer, offset to avoid overlap)\n              ctx.font = `${fontSize}px Sans-Serif`;\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"top\";\n              ctx.fillStyle = node.id === tableName ? \"#111\" : \"#444\";\n              ctx.fillText(label, node.x, node.y + 10);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,SAASA,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,YAAY,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAMC,KAAK,GAAGT,MAAM,CAAC,CAAC;EACtB,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMW,aAAa,GAAGb,OAAO,CAAC,MAAM;IAClC,IAAI,EAACO,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEO,KAAK,KAAI,EAACP,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEQ,KAAK,GAAE,OAAO;MAAED,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC;;IAEnE;IACA,MAAMA,KAAK,GAAGR,KAAK,CAACQ,KAAK,CAACC,MAAM,CAAEC,CAAC,IAAK;MACtC,MAAMC,GAAG,GAAG,OAAOD,CAAC,CAACE,MAAM,KAAK,QAAQ,GAAGF,CAAC,CAACE,MAAM,CAACC,EAAE,GAAGH,CAAC,CAACE,MAAM;MACjE,MAAME,GAAG,GAAG,OAAOJ,CAAC,CAACK,MAAM,KAAK,QAAQ,GAAGL,CAAC,CAACK,MAAM,CAACF,EAAE,GAAGH,CAAC,CAACK,MAAM;MACjE,OAAOJ,GAAG,KAAKV,SAAS,IAAIa,GAAG,KAAKb,SAAS;IAC/C,CAAC,CAAC;;IAEF;IACA,MAAMe,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAChB,SAAS,CAAC,CAAC;IACxCO,KAAK,CAACU,OAAO,CAAER,CAAC,IAAK;MACnB,MAAMC,GAAG,GAAG,OAAOD,CAAC,CAACE,MAAM,KAAK,QAAQ,GAAGF,CAAC,CAACE,MAAM,CAACC,EAAE,GAAGH,CAAC,CAACE,MAAM;MACjE,MAAME,GAAG,GAAG,OAAOJ,CAAC,CAACK,MAAM,KAAK,QAAQ,GAAGL,CAAC,CAACK,MAAM,CAACF,EAAE,GAAGH,CAAC,CAACK,MAAM;MACjEC,WAAW,CAACG,GAAG,CAACR,GAAG,CAAC;MACpBK,WAAW,CAACG,GAAG,CAACL,GAAG,CAAC;IACtB,CAAC,CAAC;IAEF,MAAMP,KAAK,GAAGP,KAAK,CAACO,KAAK,CAACE,MAAM,CAAEW,CAAC,IAAKJ,WAAW,CAACK,GAAG,CAACD,CAAC,CAACP,EAAE,CAAC,CAAC;IAE9D,OAAO;MAAEN,KAAK;MAAEC;IAAM,CAAC;EACzB,CAAC,EAAE,CAACR,KAAK,EAAEC,SAAS,CAAC,CAAC;EAEtB,oBACEH,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBzB,OAAA;MACE0B,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,CAACD,SAAS,CAAE;MACxCkB,SAAS,EAAC,2EAA2E;MAAAC,QAAA,EAEpFnB,SAAS,GAAG,YAAY,GAAG;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAERxB,SAAS,iBACRN,OAAA;MAAKwB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,eACnEzB,OAAA,CAACF,YAAY;QACXiC,GAAG,EAAE1B,KAAM;QACX2B,SAAS,EAAExB,aAAc;QACzByB,eAAe,EAAC,IAAI;QACpBC,0BAA0B,EAAE,CAAE;QAC9BC,0BAA0B,EAAE,CAAE;QAC9BC,aAAa,EAAE,IAAK;QACpBC,gBAAgB,EAAEA,CAACC,IAAI,EAAEC,GAAG,EAAEC,WAAW,KAAK;UAC5C,MAAMC,KAAK,GAAGH,IAAI,CAACvB,EAAE;UACrB,MAAM2B,QAAQ,GAAG,EAAE,GAAGF,WAAW;;UAEjC;UACAD,GAAG,CAACI,SAAS,CAAC,CAAC;UACfJ,GAAG,CAACK,GAAG,CAACN,IAAI,CAACO,CAAC,EAAEP,IAAI,CAACQ,CAAC,EAAER,IAAI,CAACvB,EAAE,KAAKZ,SAAS,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG4C,IAAI,CAACC,EAAE,EAAE,KAAK,CAAC;UAC9ET,GAAG,CAACU,SAAS,GAAGX,IAAI,CAACvB,EAAE,KAAKZ,SAAS,GAAG,SAAS,GAAGmC,IAAI,CAACY,KAAK,IAAI,MAAM;UACxEX,GAAG,CAACY,IAAI,CAAC,CAAC;;UAEV;UACAZ,GAAG,CAACa,IAAI,GAAG,GAAGV,QAAQ,eAAe;UACrCH,GAAG,CAACc,SAAS,GAAG,QAAQ;UACxBd,GAAG,CAACe,YAAY,GAAG,KAAK;UACxBf,GAAG,CAACU,SAAS,GAAGX,IAAI,CAACvB,EAAE,KAAKZ,SAAS,GAAG,MAAM,GAAG,MAAM;UACvDoC,GAAG,CAACgB,QAAQ,CAACd,KAAK,EAAEH,IAAI,CAACO,CAAC,EAAEP,IAAI,CAACQ,CAAC,GAAG,EAAE,CAAC;QAC1C;MAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAtEuBH,gBAAgB;AAAAuD,EAAA,GAAhBvD,gBAAgB;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}