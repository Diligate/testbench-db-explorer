{"ast":null,"code":"var _jsxFileName = \"/home/user5/Desktop/Imbus_Intern/client/src/utils/importFile.js\";\nimport Alert from \"../components/ui/Alert\";\nimport { TOAST } from \"../data/toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImportFile(tables, columns, impTables, impColumns, setShown) {\n  console.log(impTables, impColumns);\n  if (impColumns && impTables) {\n    for (let i = 0; i < tables.length; i++) {\n      impTables.map(tab => {\n        if (tables[i].name === tab.Name) {\n          tables[i].description = tab.Description;\n          fetch(\"http://localhost:5500/tables/\" + tables[i].id, {\n            method: \"PATCH\",\n            body: JSON.stringify(tables[i]),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n          }).then(() => {});\n          return tables[i];\n        }\n        return tables[i];\n      });\n    }\n    for (let i = 0; i < columns.length; i++) {\n      impColumns.map(col => {\n        if (columns[i].tableName === col[\"Table name\"] && columns[i].name === col.Name) {\n          columns[i].description = col.Description;\n          fetch(\"http://localhost:5500/attributes/\" + columns[i].id, {\n            method: \"PATCH\",\n            body: JSON.stringify(columns[i]),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n          }).then(() => {});\n          return columns[i];\n        }\n        return columns[i];\n      });\n    }\n    setTimeout(() => {\n      setShown(prev => [...prev, /*#__PURE__*/_jsxDEV(Alert, {\n        title: TOAST.success.title,\n        text: \"The database has been initialized successfully.\",\n        svg: TOAST.success.svg,\n        color: TOAST.success.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]);\n    }, 11000);\n  }\n}\n_c = ImportFile;\nvar _c;\n$RefreshReg$(_c, \"ImportFile\");","map":{"version":3,"names":["Alert","TOAST","jsxDEV","_jsxDEV","ImportFile","tables","columns","impTables","impColumns","setShown","console","log","i","length","map","tab","name","Name","description","Description","fetch","id","method","body","JSON","stringify","headers","then","col","tableName","setTimeout","prev","title","success","text","svg","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user5/Desktop/Imbus_Intern/client/src/utils/importFile.js"],"sourcesContent":["import Alert from \"../components/ui/Alert\";\nimport { TOAST } from \"../data/toast\";\n\nexport default function ImportFile(\n  tables,\n  columns,\n  impTables,\n  impColumns,\n  setShown\n) {\n  console.log(impTables, impColumns);\n  if (impColumns && impTables) {\n    for (let i = 0; i < tables.length; i++) {\n      impTables.map((tab) => {\n        if (tables[i].name === tab.Name) {\n          tables[i].description = tab.Description;\n          fetch(\"http://localhost:5500/tables/\" + tables[i].id, {\n            method: \"PATCH\",\n            body: JSON.stringify(tables[i]),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          }).then(() => {});\n          return tables[i];\n        }\n        return tables[i];\n      });\n    }\n    for (let i = 0; i < columns.length; i++) {\n      impColumns.map((col) => {\n        if (\n          columns[i].tableName === col[\"Table name\"] &&\n          columns[i].name === col.Name\n        ) {\n          columns[i].description = col.Description;\n          fetch(\"http://localhost:5500/attributes/\" + columns[i].id, {\n            method: \"PATCH\",\n            body: JSON.stringify(columns[i]),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          }).then(() => {});\n          return columns[i];\n        }\n        return columns[i];\n      });\n    }\n\n    setTimeout(() => {\n      setShown((prev) => [\n        ...prev,\n        <Alert\n          title={TOAST.success.title}\n          text=\"The database has been initialized successfully.\"\n          svg={TOAST.success.svg}\n          color={TOAST.success.color}\n        />,\n      ]);\n    }, 11000);\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,UAAUA,CAChCC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACR;EACAC,OAAO,CAACC,GAAG,CAACJ,SAAS,EAAEC,UAAU,CAAC;EAClC,IAAIA,UAAU,IAAID,SAAS,EAAE;IAC3B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MACtCL,SAAS,CAACO,GAAG,CAAEC,GAAG,IAAK;QACrB,IAAIV,MAAM,CAACO,CAAC,CAAC,CAACI,IAAI,KAAKD,GAAG,CAACE,IAAI,EAAE;UAC/BZ,MAAM,CAACO,CAAC,CAAC,CAACM,WAAW,GAAGH,GAAG,CAACI,WAAW;UACvCC,KAAK,CAAC,+BAA+B,GAAGf,MAAM,CAACO,CAAC,CAAC,CAACS,EAAE,EAAE;YACpDC,MAAM,EAAE,OAAO;YACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,MAAM,CAACO,CAAC,CAAC,CAAC;YAC/Bc,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;UACjB,OAAOtB,MAAM,CAACO,CAAC,CAAC;QAClB;QACA,OAAOP,MAAM,CAACO,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,OAAO,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MACvCJ,UAAU,CAACM,GAAG,CAAEc,GAAG,IAAK;QACtB,IACEtB,OAAO,CAACM,CAAC,CAAC,CAACiB,SAAS,KAAKD,GAAG,CAAC,YAAY,CAAC,IAC1CtB,OAAO,CAACM,CAAC,CAAC,CAACI,IAAI,KAAKY,GAAG,CAACX,IAAI,EAC5B;UACAX,OAAO,CAACM,CAAC,CAAC,CAACM,WAAW,GAAGU,GAAG,CAACT,WAAW;UACxCC,KAAK,CAAC,mCAAmC,GAAGd,OAAO,CAACM,CAAC,CAAC,CAACS,EAAE,EAAE;YACzDC,MAAM,EAAE,OAAO;YACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,OAAO,CAACM,CAAC,CAAC,CAAC;YAChCc,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;UACjB,OAAOrB,OAAO,CAACM,CAAC,CAAC;QACnB;QACA,OAAON,OAAO,CAACM,CAAC,CAAC;MACnB,CAAC,CAAC;IACJ;IAEAkB,UAAU,CAAC,MAAM;MACfrB,QAAQ,CAAEsB,IAAI,IAAK,CACjB,GAAGA,IAAI,eACP5B,OAAA,CAACH,KAAK;QACJgC,KAAK,EAAE/B,KAAK,CAACgC,OAAO,CAACD,KAAM;QAC3BE,IAAI,EAAC,iDAAiD;QACtDC,GAAG,EAAElC,KAAK,CAACgC,OAAO,CAACE,GAAI;QACvBC,KAAK,EAAEnC,KAAK,CAACgC,OAAO,CAACG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,CACH,CAAC;IACJ,CAAC,EAAE,KAAK,CAAC;EACX;AACF;AAACC,EAAA,GAzDuBrC,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}